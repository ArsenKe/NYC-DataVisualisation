ere's the code for a Scatter Plot with Crash Time and Contributing Factors in Plotly Express and Jupyter Notebook:

Python
# Import libraries
import pandas as pd
from ipywidgets import interact, Dropdown
import plotly.express as px

# Read data from CSV file (replace "path/to/file.csv" with your actual file path)
data = pd.read_csv("path/to/file.csv")

# Define options for contributing factors dropdown
contributing_factors_dropdown = Dropdown(
    options=list(data["Contributing Factors Vehicle 1"].unique()),
    value=data["Contributing Factors Vehicle 1"].unique()[0],  # Set default value
    description="Contributing Factor:",
)

# Create scatter plot function with interactivity
@interact
def crash_time_vs_factors(factor=contributing_factors_dropdown.value):
    """
    Creates a scatter plot showing Crash Time vs. the selected Contributing Factor.
    """
    
    fig = px.scatter(
        data,
        x="Crash Time",
        y=factor,
        color=factor.str.split().str[0],  # Color by first word of factor
        title="Crash Time vs. Contributing Factor",
    )
    fig.show()

# Display initial plot
crash_time_vs_factors(factor=contributing_factors_dropdown.value)
Use code with caution.
Explanation:

Import Libraries: We import pandas for data manipulation, ipywidgets for interactive elements, and plotly.express for creating the scatter plot.
Read Data: The code reads the CSV data into a pandas DataFrame.
Dropdown Menu: A dropdown menu is created using ipywidgets.Dropdown to allow users to select the contributing factor they want to visualize.
Scatter Plot Function: The crash_time_vs_factors function takes the selected factor as input and creates a scatter plot.
px.scatter creates the plot with Crash Time on the x-axis and the chosen factor on the y-axis.
color=factor.str.split().str[0] assigns colors to data points based on the first word of the contributing factor (helps differentiate categories).
The chart title is set to "Crash Time vs. Contributing Factor".
Interactivity: The @interact decorator makes the function interactive with the dropdown menu. Whenever the user selects a new contributing factor, the function updates the scatter plot accordingly.
Initial Plot: The function is called initially with the default contributing factor value from the dropdown to display the plot.
This code provides a basic scatter plot with crash time and one contributing factor. You can further customize it by:

Changing the coloring scheme (e.g., by severity of accident).
Adding hovertext to display additional information on hover.
Including a legend if you choose to color by multiple categories.







def crash_time_vs_factors(factor):

 """

 Creates a scatter plot showing Crash Time vs. the selected Contributing Factor.

 """

 if factor != "UNSPECIFIED": # Check if it's not the default selection

  filtered_data = data[data["Contributing Factor"] == factor] # Filter data

 else:

  filtered_data = data.copy() # Use entire data for "UNSPECIFIED"



 fig = px.scatter(

   filtered_data,

   x="CRASH DATE",

   y="CONTRIBUTING FACTOR VEHICLE 1", # Now this will match a column name

   color="CONTRIBUTING FACTOR VEHICLE 1", # Color by factor

   title="Crash Time vs. Contributing Factor",

 )

 fig.show()     










 